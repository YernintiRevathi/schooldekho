{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/components/LanguageSelector.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageSelector = ({\n  onClose\n}) => {\n  _s();\n  const {\n    i18n\n  } = useTranslation();\n  const languages = [{\n    code: 'en',\n    name: 'English',\n    nativeName: 'English'\n  }, {\n    code: 'hi',\n    name: 'Hindi',\n    nativeName: 'हिन्दी'\n  }, {\n    code: 'te',\n    name: 'Telugu',\n    nativeName: 'తెలుగు'\n  }, {\n    code: 'ta',\n    name: 'Tamil',\n    nativeName: 'தமிழ்'\n  }, {\n    code: 'ml',\n    name: 'Malayalam',\n    nativeName: 'മലയാളം'\n  }];\n  const handleLanguageChange = langCode => {\n    i18n.changeLanguage(langCode);\n    localStorage.setItem('i18nextLng', langCode);\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-2\",\n    children: languages.map(lang => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleLanguageChange(lang.code),\n      className: `w-full text-left px-4 py-2 hover:bg-gray-100 transition-colors duration-200 ${i18n.language === lang.code ? 'bg-primary-50 text-primary-600' : 'text-gray-700'}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-medium\",\n          children: lang.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-500\",\n          children: lang.nativeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, lang.code, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(LanguageSelector, \"iD7vDB/EPQWin5ATG71yacngHuk=\", false, function () {\n  return [useTranslation];\n});\n_c = LanguageSelector;\nexport default LanguageSelector;\nvar _c;\n$RefreshReg$(_c, \"LanguageSelector\");","map":{"version":3,"names":["React","useTranslation","jsxDEV","_jsxDEV","LanguageSelector","onClose","_s","i18n","languages","code","name","nativeName","handleLanguageChange","langCode","changeLanguage","localStorage","setItem","className","children","map","lang","onClick","language","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/frontend/src/components/LanguageSelector.jsx"],"sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst LanguageSelector = ({ onClose }) => {\n  const { i18n } = useTranslation();\n\n  const languages = [\n    { code: 'en', name: 'English', nativeName: 'English' },\n    { code: 'hi', name: 'Hindi', nativeName: 'हिन्दी' },\n    { code: 'te', name: 'Telugu', nativeName: 'తెలుగు' },\n    { code: 'ta', name: 'Tamil', nativeName: 'தமிழ்' },\n    { code: 'ml', name: 'Malayalam', nativeName: 'മലയാളം' },\n  ];\n\n  const handleLanguageChange = (langCode) => {\n    i18n.changeLanguage(langCode);\n    localStorage.setItem('i18nextLng', langCode);\n    onClose();\n  };\n\n  return (\n    <div className=\"py-2\">\n      {languages.map((lang) => (\n        <button\n          key={lang.code}\n          onClick={() => handleLanguageChange(lang.code)}\n          className={`w-full text-left px-4 py-2 hover:bg-gray-100 transition-colors duration-200 ${\n            i18n.language === lang.code ? 'bg-primary-50 text-primary-600' : 'text-gray-700'\n          }`}\n        >\n          <div className=\"flex items-center justify-between\">\n            <span className=\"font-medium\">{lang.name}</span>\n            <span className=\"text-sm text-gray-500\">{lang.nativeName}</span>\n          </div>\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default LanguageSelector;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM;IAAEC;EAAK,CAAC,GAAGN,cAAc,CAAC,CAAC;EAEjC,MAAMO,SAAS,GAAG,CAChB;IAAEC,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,SAAS;IAAEC,UAAU,EAAE;EAAU,CAAC,EACtD;IAAEF,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,OAAO;IAAEC,UAAU,EAAE;EAAS,CAAC,EACnD;IAAEF,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAS,CAAC,EACpD;IAAEF,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,OAAO;IAAEC,UAAU,EAAE;EAAQ,CAAC,EAClD;IAAEF,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,WAAW;IAAEC,UAAU,EAAE;EAAS,CAAC,CACxD;EAED,MAAMC,oBAAoB,GAAIC,QAAQ,IAAK;IACzCN,IAAI,CAACO,cAAc,CAACD,QAAQ,CAAC;IAC7BE,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEH,QAAQ,CAAC;IAC5CR,OAAO,CAAC,CAAC;EACX,CAAC;EAED,oBACEF,OAAA;IAAKc,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClBV,SAAS,CAACW,GAAG,CAAEC,IAAI,iBAClBjB,OAAA;MAEEkB,OAAO,EAAEA,CAAA,KAAMT,oBAAoB,CAACQ,IAAI,CAACX,IAAI,CAAE;MAC/CQ,SAAS,EAAE,+EACTV,IAAI,CAACe,QAAQ,KAAKF,IAAI,CAACX,IAAI,GAAG,gCAAgC,GAAG,eAAe,EAC/E;MAAAS,QAAA,eAEHf,OAAA;QAAKc,SAAS,EAAC,mCAAmC;QAAAC,QAAA,gBAChDf,OAAA;UAAMc,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAEE,IAAI,CAACV;QAAI;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChDvB,OAAA;UAAMc,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAEE,IAAI,CAACT;QAAU;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D;IAAC,GATDN,IAAI,CAACX,IAAI;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUR,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpB,EAAA,CAnCIF,gBAAgB;EAAA,QACHH,cAAc;AAAA;AAAA0B,EAAA,GAD3BvB,gBAAgB;AAqCtB,eAAeA,gBAAgB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}